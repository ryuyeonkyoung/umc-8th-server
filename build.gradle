plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.umc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Actuator for monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Micrometer for metrics collection
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-core'

	// AOP for custom monitoring
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	// 1. Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// 2. Database driver
	runtimeOnly 'com.mysql:mysql-connector-j'

	// P6Spy - SQL 쿼리 로깅 라이브러리
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// 3. QueryDSL (jakarta)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// 4. OpenAPI / Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// 5. Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 6. Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL Q타입 생성 디렉토리
def generated = layout.buildDirectory.dir("generated/querydsl")

// sourceSet 설정
sourceSets {
	main.java.srcDir generated.get().asFile
}

// annotation processor 설정
tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = generated.get().asFile
}

tasks.named('test') {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "com.fasterxml.jackson:jackson-bom:2.18.3"
	}
}

